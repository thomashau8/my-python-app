# .github/actions/run-linter/action.yml
name: 'Run Linter Checks'
description: 'Checks out code, sets up environment with caching, and runs linters (pre-commit)'
inputs:
  python-version:
    description: 'Python version to use'
    required: true
  poetry-version:
    description: 'Poetry version to use'
    required: true
  working-directory:
    description: 'Directory to run commands in'
    required: false
    default: '.'

runs:
  using: "composite"
  steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | POETRY_VERSION=${{ inputs.poetry-version }} python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
      shell: bash

    - name: Configure Poetry
      run: poetry config virtualenvs.in-project true
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    # Cache Poetry's own cache and the virtual environment
    - name: Cache dependencies
      id: cache-deps
      uses: actions/cache@v4
      with:
        path: |
          ~/.local/share/pypoetry/cache
          ${{ inputs.working-directory }}/.venv
        key: poetry-${{ runner.os }}-${{ inputs.python-version }}-${{ hashFiles(format('{0}/poetry.lock', inputs.working-directory)) }}
        restore-keys: |
          poetry-${{ runner.os }}-${{ inputs.python-version }}-

    - name: Install dependencies (if cache missed)
      # Only run poetry install if the cache wasn't restored ('cache-hit' is not 'true')
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-ansi --no-root
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Run Linters (Pre-Commit)
      run: poetry run pre-commit run --all-files
      shell: bash
      working-directory: ${{ inputs.working-directory }}